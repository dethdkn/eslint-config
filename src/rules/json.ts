import type { Linter } from 'eslint'
import json from 'eslint-plugin-jsonc'

export default [
  {
    name: 'dethdkn/json/rules',
    plugins: { json },
    rules: {
    // jsonc rules
      'json/no-bigint-literals': ['error'],
      'json/no-binary-expression': ['error'],
      'json/no-binary-numeric-literals': ['error'],
      'json/no-escape-sequence-in-identifier': ['error'],
      'json/no-number-props': ['error'],
      'json/no-octal-numeric-literals': ['error'],
      'json/no-parenthesized': ['error'],
      'json/no-plus-sign': ['error'],
      'json/no-template-literals': ['error'],
      'json/no-undefined-value': ['error'],
      'json/no-unicode-codepoint-escapes': ['error'],
      'json/valid-json-number': ['error'],
      'json/vue-custom-block/no-parsing-error': ['error'],
      // extension rules
      'json/array-bracket-newline': ['error'],
      'json/array-bracket-spacing': ['error'],
      'json/comma-dangle': ['error'],
      'json/comma-style': ['error'],
      'json/indent': ['error', 2],
      'json/key-spacing': ['error'],
      'json/no-dupe-keys': ['error'],
      'json/no-floating-decimal': ['error'],
      'json/no-irregular-whitespace': ['error'],
      'json/no-multi-str': ['error'],
      'json/no-octal-escape': ['error'],
      'json/no-octal': ['error'],
      'json/no-sparse-arrays': ['error'],
      'json/no-useless-escape': ['error'],
      'json/object-curly-newline': ['error'],
      'json/object-curly-spacing': ['error'],
      'json/object-property-newline': ['error'],
      'json/quote-props': ['error'],
      'json/quotes': ['error'],
      'json/space-unary-ops': ['error'],
    },
  },
  {
    name: 'dethdkn/json/sort-package-json/rules',
    files: ['**/package.json'],
    rules: {
      'json/sort-array-values': ['error', { order: { type: 'asc' }, pathPattern: '^files$' }],
      'json/sort-keys': ['error', {
        order: [
          'publisher',
          'name',
          'displayName',
          'type',
          'version',
          'private',
          'packageManager',
          'description',
          'author',
          'license',
          'funding',
          'homepage',
          'repository',
          'bugs',
          'keywords',
          'categories',
          'sideEffects',
          'exports',
          'main',
          'module',
          'unpkg',
          'jsdelivr',
          'types',
          'typesVersions',
          'bin',
          'icon',
          'files',
          'engines',
          'activationEvents',
          'contributes',
          'scripts',
          'peerDependencies',
          'peerDependenciesMeta',
          'dependencies',
          'optionalDependencies',
          'devDependencies',
          'pnpm',
          'overrides',
          'resolutions',
          'husky',
          'simple-git-hooks',
          'lint-staged',
          'eslintConfig',
        ],
        pathPattern: '^$',
      }, {
        order: {
          type: 'asc',
        },
        pathPattern: '^(?:dev|peer|optional|bundled)?[Dd]ependencies(Meta)?$',
      }, {
        order: {
          type: 'asc',
        },
        pathPattern: '^(?:resolutions|overrides|pnpm.overrides)$',
      }, {
        order: [
          'types',
          'import',
          'require',
          'default',
        ],
        pathPattern: '^exports.*$',
      }],
    },
  },
  {
    name: 'dethdkn/json/sort-tsconfig-json/rules',
    files: ['**/tsconfig.json', '**/tsconfig.*.json'],
    rules: {
      'json/sort-keys': ['error', {
        order: [
          'extends',
          'compilerOptions',
          'references',
          'files',
          'include',
          'exclude',
        ],
        pathPattern: '^$',
      }, {
        order: [
          'incremental',
          'composite',
          'tsBuildInfoFile',
          'disableSourceOfProjectReferenceRedirect',
          'disableSolutionSearching',
          'disableReferencedProjectLoad',
          'target',
          'jsx',
          'jsxFactory',
          'jsxFragmentFactory',
          'jsxImportSource',
          'lib',
          'moduleDetection',
          'noLib',
          'reactNamespace',
          'useDefineForClassFields',
          'emitDecoratorMetadata',
          'experimentalDecorators',
          'baseUrl',
          'rootDir',
          'rootDirs',
          'customConditions',
          'module',
          'moduleResolution',
          'moduleSuffixes',
          'noResolve',
          'paths',
          'resolveJsonModule',
          'resolvePackageJsonExports',
          'resolvePackageJsonImports',
          'typeRoots',
          'types',
          'allowArbitraryExtensions',
          'allowImportingTsExtensions',
          'allowUmdGlobalAccess',
          'allowJs',
          'checkJs',
          'maxNodeModuleJsDepth',
          'strict',
          'strictBindCallApply',
          'strictFunctionTypes',
          'strictNullChecks',
          'strictPropertyInitialization',
          'allowUnreachableCode',
          'allowUnusedLabels',
          'alwaysStrict',
          'exactOptionalPropertyTypes',
          'noFallthroughCasesInSwitch',
          'noImplicitAny',
          'noImplicitOverride',
          'noImplicitReturns',
          'noImplicitThis',
          'noPropertyAccessFromIndexSignature',
          'noUncheckedIndexedAccess',
          'noUnusedLocals',
          'noUnusedParameters',
          'useUnknownInCatchVariables',
          'declaration',
          'declarationDir',
          'declarationMap',
          'downlevelIteration',
          'emitBOM',
          'emitDeclarationOnly',
          'importHelpers',
          'importsNotUsedAsValues',
          'inlineSourceMap',
          'inlineSources',
          'mapRoot',
          'newLine',
          'noEmit',
          'noEmitHelpers',
          'noEmitOnError',
          'outDir',
          'outFile',
          'preserveConstEnums',
          'preserveValueImports',
          'removeComments',
          'sourceMap',
          'sourceRoot',
          'stripInternal',
          'allowSyntheticDefaultImports',
          'esModuleInterop',
          'forceConsistentCasingInFileNames',
          'isolatedModules',
          'preserveSymlinks',
          'verbatimModuleSyntax',
          'skipDefaultLibCheck',
          'skipLibCheck',
        ],
        pathPattern: '^compilerOptions$',
      }],
    },
  },
] as Linter.Config[]
